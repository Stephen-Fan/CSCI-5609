{"ast":null,"code":"var _jsxFileName = \"/Users/hannahcheng/Desktop/CSCI-5609/src/pages/ChartBar.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { BarChart } from '@mui/x-charts/BarChart';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport Form from 'react-bootstrap/Form';\nimport dataByYear from './ChartBarData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst chartSetting = {\n  xAxis: [{\n    label: 'count'\n  }],\n  width: 600,\n  height: 500\n};\nconst valueFormatter = value => `${value}`;\nfunction ChartBar() {\n  _s();\n  const [chartData, setChartData] = useState(dataByYear[2012]);\n  const [chartData1, setChartData1] = useState(dataByYear[2012]);\n  const [selectedYear, setSelectedYear] = useState('2012');\n  const [selectedYear1, setSelectedYear1] = useState('2012');\n  const [isCompareChecked, setIsCompareChecked] = useState(false);\n  const handleCheckboxChange = e => {\n    setIsCompareChecked(e.target.checked);\n  };\n  const handleSelect = eventKey => {\n    setSelectedYear(eventKey);\n    setChartData(dataByYear[eventKey]);\n  };\n  const handleSelect1 = eventKey => {\n    setSelectedYear1(eventKey);\n    setChartData1(dataByYear[eventKey]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chartTitle\",\n      children: [/*#__PURE__*/_jsxDEV(Dropdown, {\n        className: \"chartDropdown\",\n        style: {\n          display: 'flex',\n          alignItems: 'center'\n        },\n        onSelect: handleSelect,\n        children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n          variant: \"success\",\n          id: \"dropdown-basic\",\n          className: \"select-dropdown\",\n          children: \"Select a year\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n          children: Object.keys(dataByYear).map(year => /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            eventKey: year,\n            children: year\n          }, year, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n        type: \"checkbox\",\n        label: \"Compare\",\n        checked: isCompareChecked,\n        onChange: handleCheckboxChange,\n        style: {\n          marginLeft: '100px',\n          paddingTop: '15px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), isCompareChecked && /*#__PURE__*/_jsxDEV(Dropdown, {\n        className: \"chartDropdown1\",\n        style: {\n          display: 'flex',\n          alignItems: 'center'\n        },\n        onSelect: handleSelect1,\n        children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n          variant: \"success\",\n          id: \"dropdown-basic\",\n          children: \"Select a year\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n          children: Object.keys(dataByYear).map(year => /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            eventKey: year,\n            children: year\n          }, year, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"barChart\",\n      children: [/*#__PURE__*/_jsxDEV(BarChart, {\n        dataset: chartData,\n        yAxis: [{\n          scaleType: 'band',\n          dataKey: 'category'\n        }],\n        series: [{\n          dataKey: 'count',\n          label: `Weapon Category in ${selectedYear}`,\n          valueFormatter\n        }],\n        layout: \"horizontal\",\n        grid: {\n          vertical: true\n        },\n        ...chartSetting\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), isCompareChecked && /*#__PURE__*/_jsxDEV(BarChart, {\n        dataset: chartData1,\n        yAxis: [{\n          scaleType: 'band',\n          dataKey: 'category'\n        }],\n        series: [{\n          dataKey: 'count',\n          label: `Weapon Category in ${selectedYear1}`,\n          valueFormatter\n        }],\n        layout: \"horizontal\",\n        grid: {\n          vertical: true\n        },\n        style: {\n          textAlign: 'left'\n        },\n        ...chartSetting\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(ChartBar, \"hPuTO8jzA50EwBVZ3DSKyIYdlJ8=\");\n_c = ChartBar;\nexport default ChartBar;\nvar _c;\n$RefreshReg$(_c, \"ChartBar\");","map":{"version":3,"names":["React","useState","BarChart","Dropdown","Form","dataByYear","jsxDEV","_jsxDEV","chartSetting","xAxis","label","width","height","valueFormatter","value","ChartBar","_s","chartData","setChartData","chartData1","setChartData1","selectedYear","setSelectedYear","selectedYear1","setSelectedYear1","isCompareChecked","setIsCompareChecked","handleCheckboxChange","e","target","checked","handleSelect","eventKey","handleSelect1","children","className","style","display","alignItems","onSelect","Toggle","variant","id","fileName","_jsxFileName","lineNumber","columnNumber","Menu","Object","keys","map","year","Item","Check","type","onChange","marginLeft","paddingTop","dataset","yAxis","scaleType","dataKey","series","layout","grid","vertical","textAlign","_c","$RefreshReg$"],"sources":["/Users/hannahcheng/Desktop/CSCI-5609/src/pages/ChartBar.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { BarChart } from '@mui/x-charts/BarChart';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport Form from 'react-bootstrap/Form';\nimport dataByYear from './ChartBarData'\n\nconst chartSetting = {\n  xAxis: [{ label: 'count'}],\n  width: 600,\n  height: 500,\n};\n\n\nconst valueFormatter = (value) => `${value}`;\n\nfunction ChartBar() {\n  const [chartData, setChartData] = useState(dataByYear[2012]);\n  const [chartData1, setChartData1] = useState(dataByYear[2012]);\n  const [selectedYear, setSelectedYear] = useState('2012');\n  const [selectedYear1, setSelectedYear1] = useState('2012');\n  const [isCompareChecked, setIsCompareChecked] = useState(false);\n\n  const handleCheckboxChange = (e) => {\n    setIsCompareChecked(e.target.checked);\n  };\n\n  const handleSelect = (eventKey) => {\n    setSelectedYear(eventKey);\n    setChartData(dataByYear[eventKey]);\n  };\n  const handleSelect1 = (eventKey) => {\n    setSelectedYear1(eventKey);\n    setChartData1(dataByYear[eventKey]);\n  };\n\n\n  return (\n    <div>\n      <div className=\"chartTitle\">\n        <Dropdown className=\"chartDropdown\" style={{ display: 'flex', alignItems: 'center'}} onSelect={handleSelect}>\n          <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\" className=\"select-dropdown\">\n              Select a year\n          </Dropdown.Toggle>\n\n          <Dropdown.Menu>\n            {Object.keys(dataByYear).map((year) => (\n              <Dropdown.Item key={year} eventKey={year}>{year}</Dropdown.Item>\n            ))}\n          </Dropdown.Menu>\n        </Dropdown>\n\n        <Form.Check\n          type=\"checkbox\"\n          label=\"Compare\"\n          checked={isCompareChecked}\n          onChange={handleCheckboxChange}\n          style={{ marginLeft: '100px', paddingTop: '15px' }}\n        />\n\n        {isCompareChecked && (\n          <Dropdown className=\"chartDropdown1\" style={{ display: 'flex', alignItems: 'center'}} onSelect={handleSelect1}>\n            <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                Select a year\n            </Dropdown.Toggle>\n\n            <Dropdown.Menu>\n              {Object.keys(dataByYear).map((year) => (\n                <Dropdown.Item key={year} eventKey={year}>{year}</Dropdown.Item>\n              ))}\n            </Dropdown.Menu>\n          </Dropdown>\n        )}\n      </div>\n     \n      <div className=\"barChart\">\n        <BarChart\n          dataset={chartData}\n          yAxis={[{ scaleType: 'band', dataKey: 'category' }]}\n          series={[{ dataKey: 'count', label: `Weapon Category in ${selectedYear}`, valueFormatter }]}\n          layout=\"horizontal\"\n          grid={{ vertical: true }}\n          {...chartSetting}\n        />\n\n        {isCompareChecked && (\n          <BarChart\n            dataset={chartData1}\n            yAxis={[{ scaleType: 'band', dataKey: 'category' }]}\n            series={[{ dataKey: 'count', label: `Weapon Category in ${selectedYear1}`, valueFormatter }]}\n            layout=\"horizontal\"\n            grid={{ vertical: true }}\n            style={{ textAlign: 'left' }}\n            {...chartSetting}\n          />\n        )}\n      </div>\n    </div>\n    \n    \n  );\n}\n\nexport default ChartBar;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}